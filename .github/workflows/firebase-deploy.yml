
name: Deploy to Firebase
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Clean npm cache and install dependencies for functions
        run: |
          cd functions
          rm -rf node_modules
          rm -f package-lock.json
          npm install --no-audit --no-fund
          
      - name: Clean npm cache and install dependencies for functions-v2
        run: |
          cd functions-v2
          rm -rf node_modules lib
          rm -f package-lock.json
          # Utiliser npm install au lieu de npm ci
          npm install --no-package-lock
          npm list --depth=0
          echo "Vérification des dépendances clés:"
          npm list firebase-functions || true
          npm list firebase-admin || true
          npm list openai || true
          
      - name: Install Dependencies for main app
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        
      - name: Setup Environment Variables
        run: |
          cd functions-v2
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          
          # Debug information
          echo "Variables d'environnement configurées:"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          echo "Présence de OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' }}"
      
      - name: Setup Firebase service account
        id: setup-firebase
        run: |
          # Correction du script pour éviter les erreurs de syntaxe
          if [[ -n "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" ]]; then
            echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > /tmp/firebase-service-account.json
            echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
            echo "service_account_path=/tmp/firebase-service-account.json" >> $GITHUB_OUTPUT
            echo "✅ Compte de service Firebase configuré via FIREBASE_SERVICE_ACCOUNT"
          elif [[ -n "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" ]]; then
            echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > /tmp/firebase-service-account.json
            echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
            echo "service_account_path=/tmp/firebase-service-account.json" >> $GITHUB_OUTPUT
            echo "✅ Compte de service Firebase configuré via GOOGLE_APPLICATION_CREDENTIALS_JSON"
          else
            echo "❌ ERREUR: Aucun compte de service Firebase configuré"
            echo "Le déploiement pourrait échouer. Configurez FIREBASE_SERVICE_ACCOUNT ou GOOGLE_APPLICATION_CREDENTIALS_JSON"
            exit 1
          fi
          
          # Vérifier que le fichier existe et a un contenu
          if [[ -f "/tmp/firebase-service-account.json" ]]; then
            echo "Le fichier d'identifiants existe"
            ls -la /tmp/firebase-service-account.json
            file_size=$(stat -c%s "/tmp/firebase-service-account.json")
            echo "Taille du fichier: $file_size bytes"
            if [[ "$file_size" -eq 0 ]]; then
              echo "❌ ERREUR: Le fichier d'identifiants est vide"
              exit 1
            fi
            
            # Vérifier que le fichier contient du JSON valide
            if ! jq . /tmp/firebase-service-account.json >/dev/null 2>&1; then
              echo "❌ ERREUR: Le fichier d'identifiants n'est pas un JSON valide"
              exit 1
            fi
          else
            echo "❌ ERREUR: Le fichier d'identifiants n'existe pas"
            exit 1
          fi
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest
        
      - name: Build Functions v2
        run: |
          cd functions-v2
          npm run build
          echo "Build des fonctions v2 terminé"
          echo "Contenu du dossier lib:"
          ls -la lib/
        
      - name: Deploy to Firebase
        run: |
          # Utiliser le compte de service pour le déploiement
          if [[ -f "$GOOGLE_APPLICATION_CREDENTIALS" ]]; then
            echo "Utilisation du fichier d'identifiants pour le déploiement"
            echo "Déploiement sur le projet: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
            
            firebase deploy --token "${{ secrets.FIREBASE_TOKEN }}" --only hosting,functions,functions:v2 --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} --debug
          else
            echo "❌ ERREUR: Impossible de trouver le fichier d'identifiants pour le déploiement"
            exit 1
          fi
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.setup-firebase.outputs.service_account_path }}
