
name: Deploy to Firebase Staging
on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Clean npm cache and install dependencies for functions
        run: |
          cd functions
          rm -rf node_modules
          rm -f package-lock.json
          npm install --no-audit --no-fund
          
      - name: Clean npm cache and install dependencies for functions-v2
        run: |
          cd functions-v2
          rm -rf node_modules lib
          rm -f package-lock.json
          npm install --no-package-lock
          npm list --depth=0
          
      - name: Install Dependencies for main app
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        
      - name: Setup Environment Variables
        run: |
          cd functions-v2
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          
          echo "Variables d'environnement configurées:"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          echo "Présence de OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' }}"
      
      - name: Setup Firebase Service Account
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          # Créer le répertoire temporaire
          mkdir -p /tmp
          
          # Vérifier que le secret existe
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_JSON" ]; then
            echo "❌ ERREUR: FIREBASE_SERVICE_ACCOUNT n'est pas configuré."
            echo "Veuillez configurer le secret FIREBASE_SERVICE_ACCOUNT dans les paramètres du projet GitHub."
            exit 1
          fi
          
          # Écrire le secret dans un fichier
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > /tmp/firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
          echo "✅ Compte de service Firebase configuré"
          
          # Vérifier que le fichier existe
          if [ ! -f "/tmp/firebase-service-account.json" ]; then
            echo "❌ ERREUR: Le fichier de compte de service n'a pas été créé correctement."
            exit 1
          fi
          
          # Vérifier la taille du fichier (doit être > 0)
          if [ ! -s "/tmp/firebase-service-account.json" ]; then
            echo "❌ ERREUR: Le fichier de compte de service est vide."
            exit 1
          fi
          
          # Debug (sans révéler d'informations sensibles)
          echo "Fichier de compte de service créé: /tmp/firebase-service-account.json"
          echo "Taille du fichier: $(wc -c < /tmp/firebase-service-account.json) octets"
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest
        
      - name: Build Functions v2
        run: |
          cd functions-v2
          npm run build
          echo "Build des fonctions v2 terminé"
          echo "Contenu du dossier lib:"
          ls -la lib/
        
      - name: Deploy to Firebase Staging
        run: |
          if [ ! -f "$GOOGLE_APPLICATION_CREDENTIALS" ]; then
            echo "❌ ERREUR: Impossible de trouver le fichier d'identifiants pour le déploiement"
            echo "Chemin attendu: $GOOGLE_APPLICATION_CREDENTIALS"
            exit 1
          fi
          
          echo "Déploiement sur le projet: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          firebase deploy --only hosting:staging,functions,functions:v2 --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} --debug
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/firebase-service-account.json
