
name: D√©ploiement Firebase Functions
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environnement de d√©ploiement"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3
      
      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      
      - name: Installation explicite des d√©pendances critiques pour Functions V2
        working-directory: functions-v2
        run: |
          rm -rf node_modules lib
          rm -f package-lock.json
          echo "üì¶ Installation explicite des d√©pendances critiques..."
          npm install firebase-admin firebase-functions --no-package-lock
          npm list --depth=0
          echo "üì¶ V√©rification de l'installation:"
          ls -la node_modules/firebase-admin
          ls -la node_modules/firebase-functions
      
      - name: Installation compl√®te des d√©pendances Functions V2
        working-directory: functions-v2
        run: |
          npm install --no-package-lock --verbose --production
          echo "‚úÖ Installation compl√®te termin√©e"
          npm list --depth=0
          
          # V√©rifier l'installation de firebase-admin
          if [ -d "node_modules/firebase-admin" ]; then
            echo "‚úÖ firebase-admin est correctement install√©"
            ls -la node_modules/firebase-admin
          else
            echo "‚ùå firebase-admin n'est PAS install√© correctement!"
            npm install firebase-admin --save --no-package-lock
          fi
      
      - name: Configuration des variables d'environnement
        working-directory: functions-v2
        run: |
          echo "NODE_ENV=production" > .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          
          echo "Variables d'environnement configur√©es avec succ√®s"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          echo "Pr√©sence de OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' }}"
      
      - name: Configuration du compte de service Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > /tmp/firebase-service-account.json
          chmod 600 /tmp/firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
      
      - name: Installation de Firebase CLI
        run: npm install -g firebase-tools@latest
      
      - name: Build et pr√©paration des Functions V2
        working-directory: functions-v2
        run: |
          npm run build
          echo "Build des fonctions v2 termin√©"
          
          # V√©rifier que l'index.js est correctement g√©n√©r√©
          if [ ! -f "lib/index.js" ]; then
            echo "‚ùå lib/index.js n'existe pas apr√®s la compilation"
            exit 1
          fi
          
          # Copier les d√©pendances avec le script d√©di√©
          npm run copy-deps
          
          # V√©rifier que les d√©pendances sont bien copi√©es
          echo "V√©rification des d√©pendances copi√©es:"
          ls -la lib/node_modules/firebase-admin
          ls -la lib/node_modules/firebase-functions
      
      - name: D√©ploiement des Functions V2
        working-directory: functions-v2
        run: |
          echo "D√©ploiement des fonctions v2 sur ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}..."
          
          # V√©rifier une derni√®re fois la pr√©sence des modules critiques
          if [ ! -d "lib/node_modules/firebase-admin" ]; then
            echo "‚ö†Ô∏è firebase-admin n'est pas dans lib/node_modules, copie d'urgence..."
            mkdir -p lib/node_modules
            cp -r node_modules/firebase-admin lib/node_modules/
          fi
          
          if [ ! -d "lib/node_modules/firebase-functions" ]; then
            echo "‚ö†Ô∏è firebase-functions n'est pas dans lib/node_modules, copie d'urgence..."
            mkdir -p lib/node_modules
            cp -r node_modules/firebase-functions lib/node_modules/
          fi
          
          # Ajouter NODE_PATH pour aider √† trouver les modules lors du d√©ploiement
          export NODE_PATH="$PWD/lib/node_modules:$NODE_PATH"
          echo "NODE_PATH=$NODE_PATH"
          
          firebase deploy --only functions:v2 \
            --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} \
            --token "${{ secrets.FIREBASE_TOKEN }}" \
            --non-interactive \
            --debug
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/firebase-service-account.json
