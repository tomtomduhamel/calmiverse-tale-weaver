name: Déploiement des Functions v2
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environnement de déploiement"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3
      
      - name: Configuration de Node.js
        uses: ./.github/workflows/actions/setup-node
      
      - name: Vérification de l'installation de Node.js
        run: |
          node -v
          npm -v
      
      - name: Préparation de l'environnement de déploiement
        working-directory: functions-v2
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          echo "Variables d'environnement configurées avec succès"
      
      - name: Installation explicite des dépendances critiques
        working-directory: functions-v2
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          echo "📦 Installation explicite de firebase-admin et firebase-functions..."
          npm install firebase-admin firebase-functions --no-package-lock
          mkdir -p node_modules
          ls -la node_modules/firebase-admin || echo "firebase-admin non installé"
          ls -la node_modules/firebase-functions || echo "firebase-functions non installé"
          
          # Double vérification
          if [ ! -d "node_modules/firebase-admin" ] || [ ! -d "node_modules/firebase-functions" ]; then
            echo "⚠️ Réinstallation des dépendances critiques..."
            npm install firebase-admin@latest firebase-functions@latest --force --no-package-lock
          fi
      
      - name: Installation des dépendances
        working-directory: functions-v2
        run: |
          npm install --no-package-lock
          
          # Vérification approfondie des dépendances critiques
          echo "📦 Vérification des dépendances critiques..."
          ls -la node_modules/firebase-admin || echo "firebase-admin manquant, installation..."
          ls -la node_modules/firebase-functions || echo "firebase-functions manquant, installation..."
          
          # Assurer que les dépendances critiques sont présentes
          if [ ! -d "node_modules/firebase-admin" ]; then
            npm install firebase-admin@latest --force --no-package-lock
          fi
          
          if [ ! -d "node_modules/firebase-functions" ]; then
            npm install firebase-functions@latest --force --no-package-lock
          fi
          
          echo "📦 Liste des dépendances principales installées:"
          npm list --depth=0 firebase-admin firebase-functions
      
      - name: Configuration du compte de service Firebase
        uses: ./.github/workflows/actions/setup-firebase-service
        with:
          firebase-service-account: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      
      - name: Installation de Firebase CLI
        run: npm install -g firebase-tools@latest
      
      - name: Build et préparation pour le déploiement
        working-directory: functions-v2
        run: |
          # Nettoyage du répertoire lib s'il existe
          rm -rf lib
          
          # Compilation du code
          echo "🔨 Compilation du code..."
          npm run build
          
          # Vérification que le répertoire lib existe après la compilation
          if [ ! -d "lib" ]; then
            echo "❌ Erreur: Le répertoire lib n'a pas été créé pendant la compilation"
            exit 1
          fi
          
          # Création du fichier functions.yaml explicite
          echo "# Configuration Firebase Functions v2" > functions.yaml
          echo "specVersion: v1" >> functions.yaml
          echo "functions:" >> functions.yaml
          echo "  - source: ." >> functions.yaml
          echo "    codebase: v2" >> functions.yaml
          echo "    runtime: nodejs20" >> functions.yaml
          echo "    memory: 1GB" >> functions.yaml
          echo "    timeout: 540s" >> functions.yaml
          
          # Copie des dépendances dans lib
          echo "📦 Copie des dépendances dans lib..."
          npm run copy-deps
          
          # Vérification explicite de firebase-admin et firebase-functions
          if [ ! -d "lib/node_modules/firebase-admin" ]; then
            echo "⚠️ firebase-admin manquant dans lib/node_modules, copie d'urgence..."
            mkdir -p lib/node_modules
            cp -r node_modules/firebase-admin lib/node_modules/
          else
            echo "✅ firebase-admin présent dans lib/node_modules"
          fi
          
          if [ ! -d "lib/node_modules/firebase-functions" ]; then
            echo "⚠️ firebase-functions manquant dans lib/node_modules, copie d'urgence..."
            mkdir -p lib/node_modules
            cp -r node_modules/firebase-functions lib/node_modules/
          else
            echo "✅ firebase-functions présent dans lib/node_modules"
          fi
          
          # Vérification finale
          echo "📦 Contenu de lib/node_modules:"
          ls -la lib/node_modules/
          
          # Création d'un package.json simplifié si nécessaire
          if [ ! -f "lib/package.json" ]; then
            echo "{\"main\": \"index.js\", \"dependencies\": {\"firebase-admin\": \"^13.0.2\", \"firebase-functions\": \"^6.3.1\"}}" > lib/package.json
            echo "✅ package.json simplifié créé dans lib"
          fi
      
      - name: Déploiement des Functions v2
        working-directory: functions-v2
        run: |
          echo "🚀 Déploiement des functions v2 sur ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}..."
          
          # Configuration du NODE_PATH pour aider à trouver les modules
          export NODE_PATH="$PWD/lib/node_modules:$NODE_PATH"
          echo "NODE_PATH=$NODE_PATH"
          
          # Configuration explicite du codebase
          echo "firebase:" > .firebaserc
          echo "  projects:" >> .firebaserc
          echo "    default: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .firebaserc
          echo "  functions:" >> .firebaserc
          echo "    - source: ." >> .firebaserc
          echo "      codebase: v2" >> .firebaserc
          
          # Déploiement avec debug
          firebase deploy --only functions:v2 \
            --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} \
            --token "${{ secrets.FIREBASE_TOKEN }}" \
            --debug
