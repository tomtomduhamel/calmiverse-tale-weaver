
name: Deploy Firebase Functions v2
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de déploiement'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Vérifier structure du projet
        run: |
          echo "Structure du dossier functions-v2:"
          ls -la functions-v2/
      
      - name: Clean installation
        run: |
          cd functions-v2
          rm -rf node_modules lib
          rm -f package-lock.json
          echo "Nettoyage complet effectué"
      
      - name: Installation des dépendances
        run: |
          cd functions-v2
          npm install --no-package-lock
          echo "Dépendances installées avec succès"
          npm list --depth=0
        
      - name: Setup Environment Variables
        run: |
          cd functions-v2
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          
          echo "Variables d'environnement configurées:"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          echo "Présence de OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' }}"
      
      - name: Setup Firebase Service Account (Simplified)
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          # Créer le fichier de service account simplement
          echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > /tmp/firebase-service-account.json
          
          # Vérifier que le fichier existe et n'est pas vide
          if [ ! -s "/tmp/firebase-service-account.json" ]; then
            echo "❌ ERREUR: Le fichier de compte de service est vide ou n'existe pas."
            echo "Veuillez vérifier que le secret FIREBASE_SERVICE_ACCOUNT est correctement configuré."
            exit 1
          else
            echo "✅ Compte de service Firebase configuré avec succès"
            echo "Taille du fichier: $(wc -c < /tmp/firebase-service-account.json) octets"
          fi
          
          # Exporter le chemin vers le fichier comme variable d'environnement
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
      
      - name: Check Service Account File
        run: |
          if [ -f "/tmp/firebase-service-account.json" ]; then
            echo "✅ Le fichier de service account existe"
            stat /tmp/firebase-service-account.json
          else
            echo "❌ Le fichier de service account n'existe pas"
            ls -la /tmp/
            exit 1
          fi
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest
      
      - name: Build Functions v2
        run: |
          cd functions-v2
          npm run build
          echo "Build des fonctions terminé"
          echo "Contenu du dossier lib:"
          ls -la lib/
      
      - name: Deploy only Firebase Functions v2
        run: |
          echo "Déploiement des fonctions v2 sur le projet: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          firebase deploy --only functions:v2 --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} --token "${{ secrets.FIREBASE_TOKEN }}" --debug
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/firebase-service-account.json

