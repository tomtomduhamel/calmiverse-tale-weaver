
name: Déploiement des Functions v2 Simplifiées
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environnement de déploiement"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3
      
      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Préparation du projet Functions v2
        working-directory: functions-v2
        run: |
          echo "🔍 Diagnostic de l'environnement"
          node -v
          npm -v
          
          echo "🧹 Nettoyage complet..."
          rm -rf node_modules lib package-lock.json
          
          echo "🔧 Préparation du package.json..."
          cat package.json
          
          echo "📦 Installation explicite des dépendances Firebase..."
          npm install firebase-admin@13.0.2 firebase-functions@6.3.1 cors@2.8.5 --no-package-lock
          
          echo "🔍 Vérification des node_modules après installation"
          find node_modules -name "firebase-admin" -type d
          find node_modules -name "firebase-functions" -type d
          
          echo "📁 Structure du dossier courant"
          ls -la
          
          echo "✅ Préparation terminée"
      
      - name: Configuration du compte de service Firebase
        uses: ./.github/workflows/actions/setup-firebase-service
        with:
          firebase-service-account: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      
      - name: Installation de Firebase CLI
        run: npm install -g firebase-tools@13.0.2
      
      - name: Préparation du fichier functions.yaml
        working-directory: functions-v2
        run: |
          echo "# Configuration pour Firebase Functions v2" > functions.yaml
          echo "specVersion: v1" >> functions.yaml
          echo "functions:" >> functions.yaml
          echo "  - source: ." >> functions.yaml
          echo "    codebase: v2" >> functions.yaml
          echo "    runtime: nodejs20" >> functions.yaml
          echo "    memory: 1GB" >> functions.yaml
          echo "    timeout: 540s" >> functions.yaml
          
          echo "📄 Fichier functions.yaml créé:"
          cat functions.yaml
      
      - name: Déploiement avec méthode directe
        working-directory: functions-v2
        run: |
          echo "🚀 Déploiement des fonctions v2..."
          
          echo "📄 Contenu du fichier index.js:"
          cat index.js
          
          echo "📄 Contenu du package.json:"
          cat package.json
          
          echo "📄 Contenu du functions.yaml:"
          cat functions.yaml
          
          echo "🔑 Variables d'environnement:"
          echo "GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          
          echo "📦 Copie des node_modules pour le déploiement..."
          # Assurez-vous que les modules sont accessibles au moment du déploiement
          mkdir -p lib
          cp -r node_modules lib/ || echo "Pas de node_modules à copier"
          cp package.json lib/ || echo "Pas de package.json à copier"
          cp functions.yaml lib/ || echo "Pas de functions.yaml à copier"
          cp index.js lib/ || echo "Pas d'index.js à copier"
          
          echo "🚀 Exécution du déploiement Firebase..."
          firebase deploy --only functions:v2 \
            --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} \
            --token "${{ secrets.FIREBASE_TOKEN }}" \
            --debug
