
name: Deploy Firebase Functions v2
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de déploiement'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Vérifier structure du projet
        run: |
          echo "Structure du dossier functions-v2:"
          ls -la functions-v2/
      
      - name: Clean installation
        run: |
          cd functions-v2
          rm -rf node_modules lib
          rm -f package-lock.json
          echo "Nettoyage complet effectué"
      
      - name: Installation des dépendances
        run: |
          cd functions-v2
          npm install --no-package-lock
          echo "Dépendances installées avec succès"
          npm list --depth=0
        
      - name: Setup Environment Variables
        run: |
          cd functions-v2
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}" >> .env
          
          echo "Variables d'environnement configurées:"
          echo "GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          echo "Présence de OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY != '' }}"
      
      - name: Setup Firebase service account (méthode simplifiée)
        run: |
          # Créer le répertoire temporaire
          mkdir -p /tmp
          
          # Vérifier et configurer le compte de service Firebase
          if [[ -n "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" ]]; then
            echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > /tmp/firebase-service-account.json
            echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
            echo "service_account_path=/tmp/firebase-service-account.json" >> $GITHUB_OUTPUT
            echo "✅ Compte de service Firebase configuré via FIREBASE_SERVICE_ACCOUNT"
          else
            echo "❌ ERREUR: FIREBASE_SERVICE_ACCOUNT non configuré"
            echo "Veuillez configurer le secret FIREBASE_SERVICE_ACCOUNT dans les paramètres du projet GitHub"
            exit 1
          fi
      
      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest
      
      - name: Build Functions v2
        run: |
          cd functions-v2
          npm run build
          echo "Build des fonctions terminé"
          echo "Contenu du dossier lib:"
          ls -la lib/
      
      - name: Deploy only Firebase Functions v2
        run: |
          cd functions-v2
          
          if [[ ! -f "$GOOGLE_APPLICATION_CREDENTIALS" ]]; then
            echo "❌ ERREUR: Impossible de trouver le fichier d'identifiants pour le déploiement"
            echo "Chemin attendu: $GOOGLE_APPLICATION_CREDENTIALS"
            exit 1
          fi
          
          echo "Déploiement des fonctions v2 sur le projet: ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }}"
          firebase deploy --only functions:v2 --project ${{ secrets.GOOGLE_CLOUD_PROJECT || 'calmi-99482' }} --debug
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/firebase-service-account.json
