
name: "Build et d√©ploiement"
description: "Compile et d√©ploie les functions Firebase"

inputs:
  project-id:
    description: "ID du projet Firebase"
    required: true
  firebase-token:
    description: "Token Firebase CLI"
    required: true
  working-directory:
    description: "R√©pertoire de travail"
    required: true
  deploy-target:
    description: "Cible de d√©ploiement (functions ou functionsV2)"
    required: false
    default: "functions"

runs:
  using: "composite"
  steps:
    - name: Mise √† jour finale de Firebase CLI
      shell: bash
      run: |
        echo "üîß V√©rification finale de Firebase CLI avant d√©ploiement..."
        CLI_VERSION=$(firebase --version | cut -d' ' -f1)
        
        if [[ "$CLI_VERSION" != "13.0.2" ]]; then
          echo "‚ö†Ô∏è Version incorrecte d√©tect√©e: $CLI_VERSION. Installation forc√©e de Firebase CLI 13.0.2..."
          npm uninstall -g firebase-tools || true
          npm cache clean --force
          npm install -g firebase-tools@13.0.2 --force
          
          echo "Version apr√®s mise √† jour forc√©e:"
          firebase --version
        fi
        
        echo "‚úÖ Firebase CLI v13.0.2 correctement configur√©e"

    - name: Build Functions
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üî® Compilation des fonctions..."
        
        # Nettoyage du dossier lib
        rm -rf lib
        mkdir -p lib
        
        # Compilation directe
        npm run build
        
        if [ $? -ne 0 ]; then
          echo "‚ùå ERREUR de compilation"
          exit 1
        fi
        
        # Copie du package.json et installation des d√©pendances
        cp package.json lib/
        
        # Configuration du .firebaserc
        echo "{\"projects\": {\"default\": \"${{ inputs.project-id }}\"}}" > lib/.firebaserc
        
        # Copie du fichier functions.yaml dans lib
        cp functions.yaml lib/
        
        echo "üì¶ Installation des d√©pendances dans lib..."
        cd lib
        npm install --production --no-package-lock
        
        # V√©rification des modules critiques
        if [ ! -d "node_modules/firebase-admin" ] || [ ! -d "node_modules/firebase-functions" ]; then
          echo "‚ö†Ô∏è Modules Firebase manquants, installation manuelle..."
          npm install firebase-admin@13.0.2 firebase-functions@6.3.1 --save --no-package-lock
        fi
        
        echo "üìÇ V√©rification du contenu de lib/node_modules:"
        ls -la node_modules/firebase-admin || echo "‚ùå firebase-admin est manquant!"
        ls -la node_modules/firebase-functions || echo "‚ùå firebase-functions est manquant!"

    - name: D√©ploiement avec CLI Firebase 13.0.2
      shell: bash
      working-directory: ${{ inputs.working-directory }}/lib
      run: |
        echo "üöÄ D√©ploiement des fonctions sur ${{ inputs.project-id }}..."
        
        # Derni√®re v√©rification de CLI
        CLI_VERSION=$(firebase --version | cut -d' ' -f1)
        echo "Version Firebase CLI pour d√©ploiement: $CLI_VERSION"
        
        # Si version incorrecte, mise √† jour d'urgence
        if [[ "$CLI_VERSION" != "13.0.2" ]]; then
          echo "‚ö†Ô∏è Version Firebase CLI incorrecte, mise √† jour d'urgence..."
          npm uninstall -g firebase-tools || true
          npm cache clean --force
          npm install -g firebase-tools@13.0.2 --force
          firebase --version
        fi
        
        # D√©terminer la cible de d√©ploiement
        if [ "${{ inputs.deploy-target }}" = "functionsV2" ]; then
          DEPLOY_TARGET="functions:v2"
          echo "D√©ploiement des functions v2"
        else
          DEPLOY_TARGET="functions"
          echo "D√©ploiement des functions standard"
        fi
        
        # D√©ploiement avec debug complet
        echo "üîç Ex√©cution du d√©ploiement Firebase avec debug activ√©..."
        GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json firebase deploy --only ${DEPLOY_TARGET} \
          --project ${{ inputs.project-id }} \
          --token "${{ inputs.firebase-token }}" \
          --non-interactive \
          --debug
