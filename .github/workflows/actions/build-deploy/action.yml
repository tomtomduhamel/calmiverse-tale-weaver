
name: "Build et d√©ploiement"
description: "Compile et d√©ploie les functions Firebase"

inputs:
  project-id:
    description: "ID du projet Firebase"
    required: true
  firebase-token:
    description: "Token Firebase CLI"
    required: true
  working-directory:
    description: "R√©pertoire de travail"
    required: true

runs:
  using: "composite"
  steps:
    - name: V√©rification de l'environnement
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üîç V√©rification de l'environnement de build..."
        echo "üì¶ Version de Node.js: $(node -v)"
        echo "üì¶ Version de npm: $(npm -v)"
        
        if [ ! -f "package.json" ]; then
          echo "‚ùå package.json non trouv√© dans $(pwd)"
          exit 1
        fi
        
        # V√©rifier que les variables d'environnement sont d√©finies
        if [ -z "${{ inputs.project-id }}" ]; then
          echo "‚ùå project-id manquant"
          exit 1
        fi
        
        if [ -z "${{ inputs.firebase-token }}" ]; then
          echo "‚ùå firebase-token manquant"
          exit 1
        fi
        
    - name: Build Functions v2
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üî® Compilation des fonctions v2..."
        # Nettoyer le dossier lib avant la compilation
        rm -rf lib
        
        # Compiler avec TypeScript
        npm run build
        
        if [ $? -ne 0 ]; then
          echo "‚ùå ERREUR de compilation"
          exit 1
        fi
        
        # V√©rifier le contenu du dossier lib
        if [ ! -d "lib" ] || [ -z "$(ls -A lib 2>/dev/null)" ]; then
          echo "‚ùå Le dossier lib est vide ou n'existe pas apr√®s la compilation"
          ls -la
          exit 1
        fi
        
        echo "‚úÖ Build termin√© avec succ√®s"
        echo "üìÅ Structure du dossier lib:"
        tree lib/
    
    - name: Configuration de Firebase
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üîß Configuration de Firebase pour le projet ${{ inputs.project-id }}..."
        echo '{"projects": {"default": "${{ inputs.project-id }}"}}' > .firebaserc
    
    - name: D√©ploiement des Functions v2
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "üöÄ D√©ploiement des fonctions v2 sur ${{ inputs.project-id }}..."
        
        # V√©rifier une derni√®re fois que le dossier lib existe
        if [ ! -d "lib" ]; then
          echo "‚ùå Le dossier lib n'existe pas avant le d√©ploiement"
          exit 1
        fi
        
        # D√©ployer avec le mode debug pour plus d'informations
        firebase deploy --only functions:v2 \
          --project ${{ inputs.project-id }} \
          --token "${{ inputs.firebase-token }}" \
          --non-interactive \
          --debug
