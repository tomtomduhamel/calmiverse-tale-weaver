
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  console.log(`üî• [testConnection] REQU√äTE RE√áUE: ${req.method} √† ${new Date().toISOString()}`);
  
  if (req.method === 'OPTIONS') {
    console.log('‚úÖ [testConnection] CORS OPTIONS trait√©');
    return new Response(null, { headers: corsHeaders });
  }

  if (req.method === 'POST') {
    console.log('üéØ [testConnection] POST RE√áU AVEC SUCC√àS!');
    
    try {
      const body = await req.json();
      console.log('üìã [testConnection] Body re√ßu:', JSON.stringify(body, null, 2));
      
      return new Response(
        JSON.stringify({ 
          success: true, 
          message: 'Test de connexion r√©ussi',
          timestamp: new Date().toISOString(),
          receivedData: body
        }),
        {
          status: 200,
          headers: { ...corsHeaders, 'Content-Type': 'application/json' }
        }
      );
    } catch (error: any) {
      console.error('‚ùå [testConnection] Erreur:', error);
      return new Response(
        JSON.stringify({ 
          error: true, 
          message: error.message,
          timestamp: new Date().toISOString()
        }),
        {
          status: 500,
          headers: { ...corsHeaders, 'Content-Type': 'application/json' }
        }
      );
    }
  }

  console.log(`‚ùå [testConnection] M√©thode non support√©e: ${req.method}`);
  return new Response(
    JSON.stringify({ error: 'M√©thode non support√©e' }),
    {
      status: 405,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    }
  );
});
